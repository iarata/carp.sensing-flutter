# Build and test the Flutter project on push, only for the directory that were changed


name: Flutter build and test

on: push

env:
  FLUTTER_FOLDER: '$HOME/flutter'

jobs:
  pre-run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Detect changed directories
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: 07d6a0203c6addc02bab649b8695bf2da1dd9ae7
          list-files: 'shell'
          filters: |
            dart_filter:
              - added|modified: '**/*.dart'
    outputs:
      changed-dirs: ${{ steps.filter.outputs.dart_filter_files }}
      no_skip: ${{ steps.filter.dart_filter }}

  build:
    runs-on: ubuntu-latest
    needs: [pre-run]
    # if: needs.pre-run.outputs.no_skip == 'true'
    # strategy:
    #   matrix:
    #     dir: ${{ needs.pre-run.outputs.changed-dirs }}
    # # have the working directory be the matrix variable
    # defaults:
    #   run:
    #     working-directory: ${{ matrix.dir }}
    steps:
      - run: echo ${{ needs.pre-run.outputs.changed-dirs }}

      - uses: actions/checkout@v3

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: |
            flutter
            ~/.pub-cache

          key: flutter-${{ hashFiles('**/pubspec.lock') }}

      - if: ${{ steps.cache-flutter.outputs.cache-hit != 'true' }}
        name: Install Flutter
        run: git clone https://github.com/flutter/flutter.git --depth 1 -b stable $FOLDER

      - name: Add Flutter to PATH
        run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      - if: ${{ steps.cache-flutter.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed lib/** test/**

      - name: Analyze project source
        run: flutter analyze --no-fatal-infos lib/ test/

      - name: Run tests
        run: |
          flutter test